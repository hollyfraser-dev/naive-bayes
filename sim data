########### DOCUMENTATION #########
### https://www.machinelearningplus.com/predictive-modeling/how-naive-bayes-algorithm-works-with-example-and-full-code/#9buildingnaivebayesclassifierinpython
### https://scikit-learn.org/stable/modules/generated/sklearn.metrics.classification_report.html


# Import packages
from sklearn import *
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import f1_score
from sklearn.metrics import classification_report
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns; sns.set()


df = pd.read_csv('SimulatedData.csv')
df.dropna()

# subset the data
features = Data[['smfq_q1_age18',
        'smfq_q2_age18',
        'smfq_q3_age18',
        'smfq_q4_age18',
        'smfq_q5_age18',
        'smfq_q6_age18',
        'smfq_q7_age18',
        'smfq_q8_age18',
        'smfq_q9_age18',
        'smfq_q10_age18',
        'smfq_q11_age18',
        'smfq_q12_age18',
        'smfq_q13_age18',
        'smfq_age24']]
        
print(features.shape)
df = features.dropna()
print(df.shape)


# if loop to check if data is clean (more useful when working with the real data)

if -4 not in df.values:
    print('Clean')
    
if -4 in df.values:
    print('Not clean')
    
#split into training and test dataset
training, testing = train_test_split(df, test_size=0.3, random_state=0)


# Create the X, Y, Training and Test
xtrain = training.drop('smfq_age24', axis=1)
ytrain = training.loc[:, 'smfq_age24']
xtest = testing.drop('smfq_age24', axis=1)
ytest = testing.loc[:, 'smfq_age24']

print(ytrain.unique())

model = GaussianNB()
model.fit(xtrain, ytrain)
pred = model.predict(xtest)

# metrics read out
metrics = classification_report(ytest, pred, 
    labels=None, target_names=None, sample_weight=None, digits=2, output_dict=False)
metrics


# need to check here which outcome is which, also need to optimise this

target_names = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27'] 
print(classification_report(ytest, pred, target_names=target_names))
